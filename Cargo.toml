[package]
name = "adrscan"
version = "0.2.0-alpha.20250721"
edition = "2021"
authors = ["tbowman01"]
description = "AI-powered Architecture Decision Record (ADR) management with ML-enhanced drift detection"
license = "MIT"
repository = "https://github.com/tbowman01/PhotonDrift"
keywords = ["adr", "architecture", "documentation", "cli", "drift-detection", "ml", "ai"]
categories = ["command-line-utilities", "development-tools"]

[dependencies]
# CLI framework
clap = { version = "4.4", features = ["derive", "color"] }

# Serialization and configuration
serde = { version = "1.0", features = ["derive"] }
serde_yaml = "0.9"
toml = "0.9"

# File system and path handling
walkdir = "2.4"
glob = "0.3"

# Markdown and frontmatter parsing
pulldown-cmark = "0.13"
yaml-front-matter = "0.1"

# Error handling and logging
anyhow = "1.0"
thiserror = "2.0"
log = "0.4"
env_logger = "0.11"

# JSON handling
serde_json = "1.0"

# Date and time
chrono = { version = "0.4", features = ["serde"] }

# Regular expressions for pattern matching
regex = "1.10"

# Parallel processing
rayon = "1.8"
num_cpus = "1.16"

# Cryptographic hashing
sha2 = "0.10"

# Async runtime for drift detection (not compatible with WASM)
tokio = { version = "1.0", features = ["full"], optional = true }

# WASM-specific exclusions
[target.'cfg(target_arch = "wasm32")'.dependencies]
# Exclude async runtime for WASM builds
tokio = { version = "1.0", features = [], optional = true, default-features = false }

# Language Server Protocol dependencies (conditional on lsp feature)
tower-lsp = { version = "0.20", optional = true }
lsp-types = { version = "0.95", optional = true }
tokio-util = { version = "0.7", optional = true, features = ["codec"] }

# Real-time file watching and WebSocket support
notify = { version = "6.1", optional = true }
tokio-tungstenite = { version = "0.21", optional = true }
dashmap = { version = "6.1", optional = true }
crossbeam-channel = { version = "0.5", optional = true }
crossbeam = { version = "0.8", optional = true }
futures-util = { version = "0.3", optional = true }

# Cryptographic hashing for file content
sha2 = "0.10"

# Machine Learning dependencies (conditional on ml feature)
smartcore = { version = "0.3", optional = true }
ndarray = { version = "0.15", optional = true }
rand = { version = "0.8", optional = true }
nalgebra = { version = "0.33", optional = true }

# Plugin system dependencies
libloading = { version = "0.8", optional = true }
wasmtime = { version = "35.0", optional = true }
reqwest = { version = "0.12", features = ["json"], optional = true }
dirs = "5.0"
tempfile = "3.8"

# WebAssembly bindings (only for WASM target)
wasm-bindgen = { version = "0.2", optional = true, features = ["serde-serialize"] }
js-sys = { version = "0.3", optional = true }
web-sys = { version = "0.3", optional = true, features = [
  "console",
  "Window",
  "Document",
  "Element",
  "HtmlElement",
  "DomTokenList",
  "CssStyleDeclaration"
] }
console_error_panic_hook = { version = "0.1", optional = true }
serde-wasm-bindgen = { version = "0.6", optional = true }
wee_alloc = { version = "0.4", optional = true }

[features]
default = ["tokio"]
wasm = ["wasm-bindgen", "js-sys", "web-sys", "console_error_panic_hook", "serde-wasm-bindgen", "wee_alloc"]
ml = ["smartcore", "ndarray", "rand", "nalgebra"]
lsp = ["tokio", "tower-lsp", "lsp-types", "tokio-util"]
realtime = ["tokio", "notify", "tokio-tungstenite", "dashmap", "crossbeam-channel", "crossbeam", "futures-util"]
plugins = ["libloading", "wasmtime", "reqwest"]
websocket-client = ["tokio-tungstenite", "futures-util"]
[dev-dependencies]
tempfile = "3.8"
assert_cmd = "2.0"
predicates = "3.0"

[lib]
name = "adrscan"
path = "src/lib.rs"
crate-type = ["cdylib", "rlib"]

[[bin]]
name = "adrscan"
path = "src/main.rs"

[[bin]]
name = "adrscan-lsp"
path = "src/bin/lsp.rs"
required-features = ["lsp"]

[profile.release]
lto = "fat"  # Fat LTO for maximum optimization
codegen-units = 1
strip = "symbols"  # Strip all symbols for smaller size
opt-level = "z"  # Aggressive size optimization (changed from "s")
panic = "abort"  # Reduce WASM size
overflow-checks = false  # Disable for performance
debug-assertions = false  # Disable for smaller builds
rpath = false

# WASM-specific optimizations
[profile.release.package.adrscan]
opt-level = "z"  # Aggressive size optimization for WASM

# Optimize specific dependencies for size
[profile.release.package."*"]
opt-level = "z"  # Changed from "s" to "z" for aggressive optimization

# WASM-specific profile
[profile.wasm-release]
inherits = "release"
opt-level = "z"
lto = "fat"
codegen-units = 1
panic = "abort"
strip = "symbols"
overflow-checks = false
debug-assertions = false
debug = false

