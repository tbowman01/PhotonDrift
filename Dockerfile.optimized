# Optimized multi-stage Dockerfile with improved caching
# Build arguments for flexibility
ARG RUST_VERSION=1.75
ARG ALPINE_VERSION=3.22

# ==== Dependencies Stage ====
# Cache dependencies separately for faster rebuilds
FROM rust:${RUST_VERSION}-alpine AS dependencies

# Install build dependencies once
RUN apk add --no-cache \
    musl-dev \
    pkgconfig \
    openssl-dev \
    openssl-libs-static

WORKDIR /build

# Copy only dependency files first
COPY Cargo.toml Cargo.lock* ./

# Create dummy project structure to cache dependencies
RUN mkdir src && \
    echo "fn main() {}" > src/main.rs && \
    echo "" > src/lib.rs && \
    cargo build --release && \
    rm -rf src

# ==== Builder Stage ====
FROM dependencies AS builder

# Copy actual source code
COPY src/ src/

# Build with cached dependencies
RUN cargo build --release && \
    strip target/release/adrscan

# ==== Runtime Stage ====
FROM alpine:${ALPINE_VERSION} AS runtime

# Metadata
ARG BUILD_DATE
ARG GIT_REVISION
ARG VERSION

# Install runtime dependencies only
RUN apk add --no-cache ca-certificates && \
    adduser -D -u 65532 nonroot

# Copy binary from builder
COPY --from=builder /build/target/release/adrscan /usr/local/bin/adrscan

# Switch to non-root user
USER 65532:65532
WORKDIR /workspace

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD ["/usr/local/bin/adrscan", "--version"]

# Metadata labels
LABEL org.opencontainers.image.created="${BUILD_DATE}" \
      org.opencontainers.image.revision="${GIT_REVISION}" \
      org.opencontainers.image.version="${VERSION}" \
      org.opencontainers.image.title="ADRScan" \
      org.opencontainers.image.description="AI-powered ADR management" \
      org.opencontainers.image.vendor="PhotonDrift" \
      org.opencontainers.image.licenses="MIT" \
      org.opencontainers.image.source="https://github.com/tbowman01/PhotonDrift"

ENTRYPOINT ["/usr/local/bin/adrscan"]
CMD ["--help"]