name: Test Suite

on:
  push:
    branches: [ main, develop, feature/* ]
  pull_request:
    branches: [ main, develop ]

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: dashboard/backend/package-lock.json
    
    - name: Install backend dependencies
      run: |
        cd dashboard/backend
        npm ci
    
    - name: Run backend linting
      run: |
        cd dashboard/backend
        npm run lint
    
    - name: Run backend type checking
      run: |
        cd dashboard/backend
        npm run typecheck
    
    - name: Run backend unit tests
      run: |
        cd dashboard/backend
        npm run test:coverage
    
    - name: Upload backend coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: dashboard/backend/coverage/coverage-final.json
        flags: backend
        name: backend-coverage

  frontend-tests:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: dashboard/frontend/package-lock.json
    
    - name: Install frontend dependencies
      run: |
        cd dashboard/frontend
        npm ci
    
    - name: Run frontend linting
      run: |
        cd dashboard/frontend
        npm run lint
    
    - name: Run frontend type checking
      run: |
        cd dashboard/frontend
        npm run build
    
    - name: Run frontend unit tests
      run: |
        cd dashboard/frontend
        npm run test:coverage
    
    - name: Upload frontend coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: dashboard/frontend/coverage/coverage-final.json
        flags: frontend
        name: frontend-coverage

  integration-tests:
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: dashboard/package-lock.json
    
    - name: Install dependencies
      run: |
        cd dashboard
        npm ci
    
    - name: Start backend server
      run: |
        cd dashboard/backend
        npm run build
        npm start &
        sleep 10
    
    - name: Start frontend development server
      run: |
        cd dashboard/frontend
        npm run build
        npm run preview &
        sleep 5
    
    - name: Run integration tests
      run: |
        cd dashboard/backend
        npm run test -- --testNamePattern="Integration"
    
    - name: Run E2E tests (if available)
      run: |
        cd dashboard
        if [ -d "e2e" ]; then
          npm run test:e2e
        else
          echo "No E2E tests found"
        fi

  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Run security audit - Backend
      run: |
        cd dashboard/backend
        npm audit --audit-level high
    
    - name: Run security audit - Frontend
      run: |
        cd dashboard/frontend
        npm audit --audit-level high