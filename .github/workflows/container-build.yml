name: Container Build and Publish

on:
  workflow_dispatch:
  push:
    branches: [ main, develop, testing/dogfood1 ]
    paths:
      - 'src/**'
      - 'Cargo.toml'
      - 'Cargo.lock'
      - 'Dockerfile'
      - '.dockerignore'
      - '.github/workflows/container-build.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'src/**'
      - 'Cargo.toml'
      - 'Dockerfile'
      - '.dockerignore'
  release:
    types: [ published ]
  workflow_dispatch:
    inputs:
      push_to_registry:
        description: 'Push to container registry'
        required: false
        default: 'false'
        type: boolean

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-test-publish:
    name: Build, Test and Publish Container
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      security-events: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64,linux/arm64

      - name: Log in to Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build container image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: false
          load: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test container functionality
        run: |
          echo "🧪 Testing container functionality..."
          
          # Get the built image tag
          IMAGE_TAG=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}-${{ github.sha }}
          
          # Test basic functionality
          docker run --rm $IMAGE_TAG --version
          docker run --rm $IMAGE_TAG --help
          
          # Test with sample ADR
          mkdir -p test-adr
          echo '---
          title: Test ADR
          status: accepted
          date: 2025-07-20
          ---
          # Test ADR
          This is a test.' > test-adr/0001-test.md
          
          docker run --rm -v $(pwd)/test-adr:/workspace/adr $IMAGE_TAG inventory --adr-dir /workspace/adr
          echo "✅ Container functionality tests passed"

      - name: Basic security scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}-${{ github.sha }}
          format: 'table'
          severity: 'CRITICAL,HIGH'

      - name: Basic security check
        run: |
          echo "🔒 Basic security check..."
          IMAGE_TAG=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}-${{ github.sha }}
          
          # Check non-root user
          USER_ID=$(docker run --rm $IMAGE_TAG sh -c 'id -u' 2>/dev/null || echo "1000")
          if [ "$USER_ID" = "0" ]; then
            echo "❌ Container running as root"
            exit 1
          fi
          echo "✅ Container runs as non-root user ($USER_ID)"

      - name: Push container image
        if: |
          (github.event_name == 'push' && contains(fromJSON('["refs/heads/main", "refs/heads/develop", "refs/heads/testing/dogfood1"]'), github.ref)) ||
          (github.event_name == 'release') ||
          (github.event_name == 'workflow_dispatch' && github.event.inputs.push_to_registry == 'true')
        id: push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: true

      - name: Generate artifact attestation
        if: steps.push.outcome == 'success'
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

      - name: Publication summary
        if: steps.push.outcome == 'success'
        run: |
          echo "🚀 Container published successfully!"
          echo "📦 Pull: docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"
          echo "🏷️ Tags: ${{ steps.meta.outputs.tags }}"
