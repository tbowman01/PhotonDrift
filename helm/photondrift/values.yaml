# Default values for PhotonDrift
# This is a YAML-formatted file.

# Global configuration
global:
  imageRegistry: ghcr.io
  imagePullSecrets: []

# PhotonDrift CLI service
cli:
  enabled: true
  image:
    repository: tbowman01/photondrift
    tag: "latest"
    pullPolicy: IfNotPresent
  
  # Run as CronJob for scheduled ADR scanning
  schedule: "0 2 * * *"  # Daily at 2 AM
  
  # Resource limits
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi
  
  # Security context
  securityContext:
    runAsNonRoot: true
    runAsUser: 65532
    runAsGroup: 65532
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - ALL
    readOnlyRootFilesystem: true
  
  # Volume mounts for ADR directories
  persistence:
    enabled: true
    storageClass: ""
    accessMode: ReadWriteOnce
    size: 1Gi
    mountPath: /workspace
  
  # Configuration
  config:
    adrDir: "/workspace/adr"
    outputDir: "/workspace/output"
    logLevel: "info"
    features:
      ml: true
      drift_detection: true

# Dashboard backend (optional)
dashboard:
  backend:
    enabled: false
    image:
      repository: tbowman01/photondrift-dashboard-backend
      tag: "latest"
      pullPolicy: IfNotPresent
    
    replicaCount: 1
    
    service:
      type: ClusterIP
      port: 3000
    
    resources:
      limits:
        cpu: 1000m
        memory: 1Gi
      requests:
        cpu: 200m
        memory: 256Mi
    
    # Environment variables
    env:
      - name: NODE_ENV
        value: "production"
      - name: PORT
        value: "3000"
    
    # Health checks
    livenessProbe:
      httpGet:
        path: /health
        port: http
      initialDelaySeconds: 30
      periodSeconds: 10
    
    readinessProbe:
      httpGet:
        path: /ready
        port: http
      initialDelaySeconds: 5
      periodSeconds: 5
  
  # Frontend (if enabled)
  frontend:
    enabled: false
    image:
      repository: tbowman01/photondrift-dashboard-frontend
      tag: "latest"
      pullPolicy: IfNotPresent
    
    replicaCount: 1
    
    service:
      type: ClusterIP
      port: 80
    
    resources:
      limits:
        cpu: 500m
        memory: 512Mi
      requests:
        cpu: 100m
        memory: 128Mi
    
    # Ingress configuration
    ingress:
      enabled: false
      className: ""
      annotations: {}
      hosts:
        - host: photondrift.local
          paths:
            - path: /
              pathType: Prefix
      tls: []

# Service account
serviceAccount:
  create: true
  annotations: {}
  name: ""

# Pod security
podSecurityContext:
  fsGroup: 65532

# Node selection
nodeSelector: {}

# Tolerations
tolerations: []

# Affinity
affinity: {}

# Autoscaling (for dashboard components)
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

# Monitoring
monitoring:
  enabled: false
  serviceMonitor:
    enabled: false
    interval: 30s
    scrapeTimeout: 10s
    labels: {}

# Network policies
networkPolicy:
  enabled: false
  ingress:
    enabled: true
    from: []
  egress:
    enabled: true
    to: []